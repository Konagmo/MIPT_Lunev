Rights 0666
/etc/passwd
/etc/group
<user>:<user_group>
id_owner == id_user -> проверяются права доступа
id_owner_group == id_user_group -> проверка группы
проверка всего остального
id_user = 0 -> root права не проверяются
access_control_list & security_model
selinux (redHat) |
AppArmor         | working as default

3 bits
r,w,x => 9 bit rwx_rwx_rwx -> восьмеричная с.с.
права собственника, права группы, права всех остальных
0744 = rw_r__r__

1. regular files
2. directories
	Директории пользователь напрямую редактировать не может
	Право записи в дир. - право создавать и удалять файлы -> можно 
		удалить файл, к которму нет доступа
	Право исполнения -  
3. FIFO
4. Файлы устройств (жд, клава, монитор)
	/dev/sda -> доступ к диску без файловой системы
5. Файлы для открывания unix domen socket'ов
6. Symlinks
	/usr/bin/bash -> есть корневая файловая система(главная), 
		главная директория(корневая) - начинается со /. -> search
		for usr -> search for bin -> search for bash
		открыли 3 директории - долго -> используется файловый 
		дескриптор.
	Файловая структура - дерево(без пересечений)
	Symlinks - пересечения в дереве.
	Sl - Указание на какое имя файла перейти.
	Может возникнуть зацикливание. Ограничение на глубину дерева(~1000)
	Ограничение количества переходов, идущих подряд.
dentry
(directoty entry)
файловая сис-ма хранит инф. о файлах в индесных узлах i-node
индент. собственника, группы, время создания, модификации. 
Он лежит в памяти и в файловой сис-ме.
С каждым узлом - счетчик использования.
Есть одинаковые файлы с разными именами.
Место освобождено, если счетчик = 0.
man 2 stat - мето-информация

Системные вызовы для работы с файлами

fd(= файл. дескриптор) = open() OPEN_MAX
close(fd)
read, write, lseek
pread, pwrite - передается позиция, с которой читать/записывать
readv, writev
preadv, pwritev

fstat
fcntl
ioctl
(for directory) readdir, opendir

To delete
	unlink - удаляет одно из имен файла(удаляет одну ссылку на файл)
link - создать еще одно имя к текущему файлу
symlink
mknod - создает FIFO и прочее(mkfifo) 

rename - атомарен, не существует два файла одновременно. Сначала один файл,
затем сразу переименованный.

2 специльных имени -> '.'- текущая '..'-выше

Если больше 1 диска
	На каждом - своя файловая система
	-> Объединяем в одну
Точки монтирования / - точка монтирования корневого диска
mount - в некоторую директорию корень другого диска (обращение в другое место
ядро знает) 

Файл имеент несколько имен в одной файловой системе.
Жесткая ссылка - у одной i-nod несколько имен.
После удаления файла symlink существует, но ведет в никуда.
