Семафоры - похожи на семафоры Дейкстры
Позволяют дожидаться нуля(доп операция), +, -
int semget(key_t key, int nsize, int flags)
	IPC_PRIVATE | flok
semctl(id, IPC_RMID)
Increase semop(id(from semget, struct semop *ops, int n) 
- массив операций, размер массива(структ)
Выполняются либо все, либо ожидание у всех

struct semop{
sem_num = номер сем. в наборе
sem_op = +1/-1/0
sem_flag = IPC_NOWAIT/SEM_UNDO - сем анду 
-заводится доп переменная
если +1 то в переменную связанную с семафором
добавляется 1
Если процесс вышел и значение в аккумулятивной переменной
не 0, то она откатится до 1(атомарный откат)
Нельзя сделать так, что прога повиснет при отключении
Ctrl-C
-Но вейт - либо сразу, либо ничего
};


Разделяемая память 

int shmget(key, int size, int flag)
shmctl(id, IPC_RMID)

void* shmat(id, NULL, 000..man) - get adress
Ошибка - вернется [(void*)-1]
Дает указатель на участок памяти для 
От того что выполнили ctl, поинтер не станет кривым
Работаем пока не выполнен detach
int shmdt(void * adr)
...........
Программа: передать файл из одно в другой без отношения родитель-ребенок
Есть разделяемая память и семафоры
Смотри первый плюс
Одновременно работает только одна пара
Файл не должен быть испорчен!
Процессы можно прервать в любой момент
Значение переменных семафоры после того, как объект создан равны 0.!!
...........

Смотри лекцию - производитель-потребитель.
